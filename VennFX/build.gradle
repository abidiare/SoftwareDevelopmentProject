/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */
 plugins {
    // Apply the java-library plugin to add support for Java Library
      id 'application' 	
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'


mainClassName = 'VennDiagramMain.VennDiagramWindowMain'


sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {

	from {
		(configurations.runtime).collect {
			it.isDirectory() ? it : zipTree(it) 
		} 
	}
    manifest {
        attributes 'Implementation-Title': 'VennDiagram',
                   'Main-Class': mainClassName
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    implementation 'org.apache.poi:poi:3.12'
	implementation 'org.apache.poi:poi-ooxml:3.12'
	implementation 'com.fasterxml:aalto-xml:1.0.0'
    implementation fileTree(dir: 'libs', include: '*.jar')
	implementation fileTree(dir: "${System.properties['java.home']}", include: '**/jfxrt.jar')
    // Use JUnit test framework
	implementation files("${System.properties['java.home']}/../lib/ant-javafx.jar")
	// https://mvnrepository.com/artifact/org.testfx/openjfx-monocle
	testCompile group: 'org.testfx', name: 'openjfx-monocle', version: '8u20-b26'
	testRuntime "org.testfx:openjfx-monocle:8u76-b04"
    
	//testCompile "org.testfx:openjfx-monocle:8u76-b04"
	//testRuntime  "org.testfx:openjfx-monocle:1.8.0_20"



    //testCompile 'org.testfx:testfx-core:4.0.1-alpha'
    compile 'junit:junit:4.12'
    //compile 'org.testfx:testfx-junit:4.0+'
    compile 'org.apache.poi:poi:3.9'

}

test {
    jvmArgs "-Dheadless=${project.hasProperty('headless') ? project.headless : true}"
	testLogging {
		events "passed", "skipped", "failed"
	}
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
   flatDir {
       dirs "$rootProject.projectDir/libs"
   }
}




